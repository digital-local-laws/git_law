.modal-body
  %alert{ ng: { repeat: "alert in alerts" }, type: "{{alert.type}}",
    close:"closeAlert($index)" }= "{{alert.msg}}"
  %form{ name: "proposedLawForm" }
    .form-group.has-feedback{ ng: { class: "{'has-error': errors.title || proposedLawForm.title.$invalid, 'has-success': proposedLaw.title && !errors.title && proposedLawForm.title.$valid }" } }
      %label.control-label{ for: "title" } Title
      %input.form-control{ type: 'text', id: "title", name: "title",
        ng: { model: 'proposedLaw.title', required: 'true' } }
      %span.glyphicon.glyphicon-ok.form-control-feedback{ ng: { show: "proposedLaw.title && !errors.title && !proposedLawForm.title.$invalid" } }
      %span.glyphicon.glyphicon-remove.form-control-feedback{ ng: { show: "errors.title || proposedLawForm.title.$invalid" } }
      %span.help-block
        Briefly describe to purpose and effect of the proposed law.
      %span.help-block{ ng: { show: "proposedLawForm.title.$error.required" } }
        is required
        %br
      %span.help-block{ ng: { repeat: "error in errors.title" } }
        {{error}}
        %br
.modal-footer
  %button.btn.btn-primary{ type: "button", ng: { click: "save(proposedLaw)",
  disabled: "proposedLawForm.$invalid" } }
    %span.glyphicon.glyphicon-ok
    {{proposedLaw.id ? 'Update Proposed Law Settings' : 'Add Proposed Law'}}
  %button.btn.btn-default{ type: "button", ng: { click: "cancel()" } }
    %span.glyphicon.glyphicon-remove
    Cancel

